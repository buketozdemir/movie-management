version: '3.8'

services:
  movie_management:
    build: .
    ports:
      - "3000:3000"
    container_name: movie_management
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://admin:admin@mongo:27017/admin?authSource=admin
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=admin
    networks:
      - app-network

  mongo:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet mongodb://admin:admin@localhost:27017/admin
      interval: 10s
      retries: 5
      start_period: 10s
    networks:
      - app-network

  redis:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --requirepass admin
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "admin", "ping"]
      interval: 10s
      retries: 5
      start_period: 10s
    networks:
      - app-network

volumes:
  mongo-data:

networks:
  app-network:
    driver: bridge
